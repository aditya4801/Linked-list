class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(head==NULL){
            return head;
        }
        else{
            vector<int>v;
        
            ListNode* temp = head;
            while(temp){
                v.push_back(temp->val);
                temp = temp->next;
            }

            reverse(v.begin()+left-1,v.begin()+right);
            temp = head;
            
            for(auto i:v){
                temp->val = i;
                temp = temp->next;
            }
            return head;
        }
    }
};



class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(left == right || !head->next) return head;
        ListNode* pre = nullptr,*cur = head;
        for(int i = 0;i<left-1;i++){
            pre = cur;
            cur = cur->next;
        }
        ListNode *temp = pre,*temp2 = cur;
        for(int i = 0; i <= right-left;i++){
            ListNode* t = cur->next;
            cur->next = pre;
            pre = cur;
            cur = t;
        }
        temp2->next = cur;
        if(!temp) return pre;
        temp->next = pre;
        return head;
    }
};
